import{h as p,s as m,k as g,u as k}from"./KMZoqEnJ.js";import{u as S}from"./ZbFR6LgV.js";import{u as h}from"./VZv9L4wT.js";const C=s=>({id:s.id,uuid:s.uuid,sector:s.sector,category:s.category,value:s.value,isSelected:!1}),b=()=>{const s=k(),i=p(),{setProfessionalServices:n,setKeywords:d,setUpdateProfile:u}=i,{professionnalServices:f,keywords:w}=m(i),c=g(!1);S("token");const r=h(),v=async o=>{try{c.value=!0;const e=await(r==null?void 0:r.get(`${s.public.apiUrl}/sector`));if(e){const t=e.data.data.filter(a=>a.name.toLowerCase()===o.toLowerCase());return await Promise.all([y(t[0].uuid),l(t[0].name)]),c.value=!1,{services:f.value,keywords:w.value}}}catch{throw new Error("No data received from API")}},y=async o=>{try{const e=await(r==null?void 0:r.get(`${s.public.apiUrl}/service`,{params:{q:o,limit:100}}));if(e){const t=e.data.data.filter(a=>a.sectorUuid.toLowerCase()===o.toLowerCase());n(t)}}catch{console.error("No data received from API")}},l=async o=>{c.value=!0;try{const e=await(r==null?void 0:r.get(`${s.public.apiUrl}/keyword`,{params:{q:o,limit:1e3}}));if(e){const t=e.data.data.filter(a=>a.sector.toLowerCase()==o.toLowerCase()).slice(0,100).map(a=>C(a));console.log(t,"Keywords fetched and filtered"),d(t),c.value=!1}}catch(e){console.error("Error fetching keywords:",e)}};return{loading:c,getKeywords:l,getSectors:v,sendProfessionalServices:async o=>{try{const e=await(r==null?void 0:r.post(`${s.public.apiUrl}/professional-service/create`,o));e&&(n(e.data),u(!0))}catch(e){console.error("Error sending professional services:",e)}}}};export{b as u};

import{g as T,e as w,a as M,m as x,b as y,c as I,d as O}from"./BtmbzILQ.js";import{aa as u,ab as N}from"./aI3ctD-H.js";function z(t,a){const e=u(t),i=u(a),r=e.getTime()-i.getTime();return r<0?-1:r>0?1:r}function R(t){return N(t,Date.now())}function Y(t){return a=>{const i=(t?Math[t]:Math.trunc)(a);return i===0?0:i}}function v(t,a,e){const i=T(),r=(e==null?void 0:e.locale)??i.locale??w,h=z(t,a);if(isNaN(h))throw new RangeError("Invalid time value");const c=Object.assign({},e,{addSuffix:e==null?void 0:e.addSuffix,comparison:h});let m,d;h>0?(m=u(a),d=u(t)):(m=u(t),d=u(a));const o=Y((e==null?void 0:e.roundingMethod)??"round"),g=d.getTime()-m.getTime(),f=g/O,S=M(d)-M(m),l=(g-S)/O,D=e==null?void 0:e.unit;let n;if(D?n=D:f<1?n="second":f<60?n="minute":f<x?n="hour":l<y?n="day":l<I?n="month":n="year",n==="second"){const s=o(g/1e3);return r.formatDistance("xSeconds",s,c)}else if(n==="minute"){const s=o(f);return r.formatDistance("xMinutes",s,c)}else if(n==="hour"){const s=o(f/60);return r.formatDistance("xHours",s,c)}else if(n==="day"){const s=o(l/x);return r.formatDistance("xDays",s,c)}else if(n==="month"){const s=o(l/y);return s===12&&D!=="month"?r.formatDistance("xYears",1,c):r.formatDistance("xMonths",s,c)}else{const s=o(l/I);return r.formatDistance("xYears",s,c)}}function _(t,a){return v(t,R(t),a)}export{_ as f};

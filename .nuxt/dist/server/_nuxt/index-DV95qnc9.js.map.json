{"file":"index-DV95qnc9.js","mappings":"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","names":["axios"],"sources":["../../../../stores/apps/tickets.ts","../../../../components/apps/tickets/TicketList.vue","../../../../pages/apps/tickets/index.vue"],"sourcesContent":["import { defineStore } from 'pinia';\n// project imports\nimport axios from '@/utils/axios';\nimport { map } from 'lodash';\n\ninterface TicketType {\n  Id?: number | any;\n  ticketTitle?: string;\n  ticketDescription?: string;\n  Status?: string;\n  Label?: string;\n  thumb?: string;\n  AgentName?: string;\n  Date?: string | Date;\n}\n\ninterface ticketType {\n  ticket: TicketType[];\n  ticketContent: number;\n  ticketearch: string;\n}\n\nexport const useTicketstore = defineStore({\n  id: 'tickets',\n  state: (): ticketType => ({\n    ticket: [],\n    ticketContent: 1,\n    ticketearch: '',\n  }),\n  actions: {\n    // Fetch ticket\n    async fetchTicket() {\n      try {\n        const data = await axios.get('/api/data/tickets/TicketData');\n        this.ticket = data.data;\n        console.log(data);\n      } catch (error) {\n        alert(error);\n        console.log(error);\n      }\n    },\n\n    //select chat\n    SelectTicket(itemID: number) {\n      this.ticketContent = itemID;\n    },\n\n    deleteTicket(itemID: number) {\n      const index = this.ticket.findIndex((p) => p.Id == itemID);\n      if (index !== -1) {\n        this.ticket = [...this.ticket.slice(0, index), ...this.ticket.slice(index + 1)];\n      }\n    },\n    // Add new ticket\n    addTicket(newTicket: TicketType) {\n      // You might want to assign an Id based on the current length or other logic\n      newTicket.Id = this.ticket.length > 0 ? Math.max(...this.ticket.map((t) => t.Id)) + 1 : 1; // Auto-increment Id\n      this.ticket.push(newTicket);\n    },\n  },\n});\n","<script setup lang=\"ts\">\nimport { ref, onMounted, computed, watch } from 'vue';\nimport { useTicketstore } from '@/stores/apps/tickets';\nimport { format } from 'date-fns';\nimport { Icon } from '@iconify/vue';\nimport user3 from '/images/profile/3.jpg';\nconst store = useTicketstore();\n\n// Fetch tickets and ensure tickets are available\nonMounted(async () => {\n  await store.fetchTicket();\n  console.log('Fetched tickets:', getTickets.value);\n  setTicketType(TicketTypeVal.value);\n});\n\n// Get tickets from the store\nconst getTickets = computed(() => store.ticket);\n\nlet FinalTickets = ref([...getTickets.value]);\n\nconst searchValue = ref('');\nconst TicketTypeVal = ref('total');\n\n// Create New Ticket\nconst showCreateTicketModal = ref(false);\nconst newTicket = ref({ title: '', description: '', usernm: 'Liam' });\n\nconst createTicket = () => {\n  if (newTicket.value.title && newTicket.value.description && newTicket.value.usernm) {\n    const newId = getTickets.value.length + 1;\n    const newTicketData = {\n      Id: newId,\n      ticketTitle: newTicket.value.title,\n      ticketDescription: newTicket.value.description,\n      AgentName: newTicket.value.usernm,\n      Label: 'success',\n      Status: 'Open',\n      Date: new Date().toISOString(),\n      thumb: user3,\n    };\n\n    store.addTicket(newTicketData);\n    setTicketType('total');\n    newTicket.value.title = '';\n    newTicket.value.description = '';\n    showCreateTicketModal.value = false;\n  }\n};\n\n// Function to set the ticket type and filter based on status\nconst setTicketType = (type: string) => {\n  TicketTypeVal.value = type;\n  console.log(`TicketTypeVal changed to: ${type}`);\n\n  if (TicketTypeVal.value === 'total') {\n    FinalTickets.value = [...getTickets.value];\n  } else {\n    FinalTickets.value = getTickets.value.filter((ticket) => {\n      console.log('Filtering ticket:', ticket);\n      return ticket.Status && ticket.Status.toLowerCase() === TicketTypeVal.value.toLowerCase();\n    });\n  }\n\n  applySearchFilter();\n};\n\n// Function to apply search filter to tickets\nconst applySearchFilter = () => {\n  if (searchValue.value) {\n    FinalTickets.value = FinalTickets.value.filter((ticket) =>\n      ticket.ticketTitle?.toLowerCase().includes(searchValue.value.toLowerCase())\n    );\n  }\n};\n\nwatch(searchValue, applySearchFilter);\n\nconst totalTicketCount = computed(() => getTickets.value.length);\nconst pendingTicketCount = computed(\n  () => getTickets.value.filter((ticket) => ticket.Status === 'Pending').length\n);\nconst openTicketCount = computed(\n  () => getTickets.value.filter((ticket) => ticket.Status === 'Open').length\n);\nconst closedTicketCount = computed(\n  () => getTickets.value.filter((ticket) => ticket.Status === 'Closed').length\n);\n\nconst handleDeleteTicket = (ticketId: number) => {\n  store.deleteTicket(ticketId);\n  setTicketType(TicketTypeVal.value);\n};\n</script>\n\n<template>\n  <v-card elevation=\"10\">\n    <v-card-item>\n      <div class=\"overflow-x-reposive\">\n        <v-row class=\"d-flex flex-nowrap\">\n          <v-col cols=\"10\" md=\"3\" sm=\"6\">\n            <div\n              class=\"bg-lightprimary pa-7 text-center cursor-pointer rounded-md\"\n              @click=\"setTicketType('total')\"\n            >\n              <h2 class=\"text-primary text-24\">{{ totalTicketCount }}</h2>\n              <h6 class=\"text-primary text-h6\">Total Tickets</h6>\n            </div>\n          </v-col>\n          <v-col cols=\"10\" md=\"3\" sm=\"6\">\n            <div\n              class=\"bg-lightwarning pa-7 text-center cursor-pointer rounded-md\"\n              @click=\"setTicketType('Pending')\"\n            >\n              <h2 class=\"text-warning text-24\">{{ pendingTicketCount }}</h2>\n              <h6 class=\"text-warning text-h6\">Pending Tickets</h6>\n            </div>\n          </v-col>\n          <v-col cols=\"10\" md=\"3\" sm=\"6\">\n            <div\n              class=\"bg-lightsuccess pa-7 text-center cursor-pointer rounded-md\"\n              @click=\"setTicketType('Open')\"\n            >\n              <h2 class=\"text-success text-24\">{{ openTicketCount }}</h2>\n              <h6 class=\"text-success text-h6\">Open Tickets</h6>\n            </div>\n          </v-col>\n          <v-col cols=\"10\" md=\"3\" sm=\"6\">\n            <div\n              class=\"bg-lighterror pa-7 text-center cursor-pointer rounded-md\"\n              @click=\"setTicketType('Closed')\"\n            >\n              <h2 class=\"text-error text-24\">{{ closedTicketCount }}</h2>\n              <h6 class=\"text-error text-h6\">Closed Tickets</h6>\n            </div>\n          </v-col>\n        </v-row>\n      </div>\n      <div class=\"\">\n        <div class=\"d-sm-flex justify-space-between align-center my-7\">\n          <v-btn color=\"primary\" rounded=\"pill\" @click=\"showCreateTicketModal = true\"\n            >Create Ticket</v-btn\n          >\n          <v-sheet width=\"255\" class=\"mt-lg-0 mt-4\">\n            <v-text-field\n              v-model=\"searchValue\"\n              label=\"Search Invoice\"\n              variant=\"outlined\"\n              hide-details\n              class=\"w-100\"\n              density=\"compact\"\n            >\n              <template v-slot:prepend-inner>\n                <Icon icon=\"solar:magnifer-linear\" height=\"18\" width=\"25\" />\n              </template>\n            </v-text-field>\n          </v-sheet>\n        </div>\n\n        <!-- Render filtered tickets -->\n        <v-table class=\"ticket-table\">\n          <template v-slot:default>\n            <thead>\n              <tr>\n                <th class=\"text-h6 text-no-wrap\">Id</th>\n                <th class=\"text-h6 text-no-wrap\">Ticket</th>\n                <th class=\"text-h6 text-no-wrap\">Assigned To</th>\n                <th class=\"text-h6 text-no-wrap\">Status</th>\n                <th class=\"text-h6 text-no-wrap\">Date</th>\n                <th class=\"text-h6 text-no-wrap\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr\n                v-for=\"ticket in FinalTickets\"\n                :key=\"ticket.Id\"\n                @click=\"store.SelectTicket(ticket.Id)\"\n                v-if=\"FinalTickets.length > 0\"\n              >\n                <td class=\"text-body-1\">\n                  {{ ticket.Id }}\n                </td>\n                <td>\n                  <h6 class=\"text-h6\">{{ ticket.ticketTitle }}</h6>\n                  <p style=\"max-width: 280px\" class=\"text-body-1 text-muted text-truncate\">\n                    {{ ticket.ticketDescription }}\n                  </p>\n                </td>\n                <td>\n                  <div class=\"d-flex ga-2 align-center\">\n                    <v-avatar size=\"40\">\n                      <img :src=\"ticket.thumb\" :alt=\"ticket.thumb\" width=\"40\"\n                    /></v-avatar>\n                    <h6 class=\"text-h6 text-no-wrap\">{{ ticket.AgentName }}</h6>\n                  </div>\n                </td>\n                <td>\n                  <v-chip\n                    rounded=\"pill\"\n                    class=\"font-weight-bold\"\n                    :color=\"ticket.Label\"\n                    size=\"small\"\n                    label\n                    >{{ ticket.Status }}</v-chip\n                  >\n                </td>\n                <td>\n                  <p class=\"text-muted text-body-1 text-no-wrap\">\n                    {{ ticket?.Date ? format(new Date(ticket.Date), 'E, MMM d') : 'N/A' }}\n                  </p>\n                </td>\n                <td class=\"text-center\">\n                  <v-btn\n                    icon\n                    color=\"lighterror\"\n                    class=\"mx-auto\"\n                    flat\n                    size=\"x-small\"\n                    @click.stop=\"handleDeleteTicket(ticket.Id)\"\n                  >\n                    <v-tooltip activator=\"parent\" location=\"top\">Delete Ticket</v-tooltip>\n                    <Icon\n                      icon=\"solar:trash-bin-minimalistic-linear\"\n                      class=\"text-error\"\n                      height=\"18\"\n                    />\n                  </v-btn>\n                </td>\n              </tr>\n            </tbody>\n          </template>\n        </v-table>\n      </div>\n    </v-card-item>\n  </v-card>\n\n  <!-- Add Ticket -->\n  <!-- Create Ticket Modal -->\n  <v-dialog v-model=\"showCreateTicketModal\" max-width=\"500px\">\n    <v-card>\n      <v-card-title class=\"pa-4 bg-primary\">Create New Ticket</v-card-title>\n      <v-card-text>\n        <v-form>\n          <v-text-field label=\"Ticket Title\" v-model=\"newTicket.title\" required></v-text-field>\n          <v-textarea\n            label=\"Ticket Description\"\n            v-model=\"newTicket.description\"\n            rows=\"4\"\n            required\n          ></v-textarea>\n          <v-select\n            label=\"Assign To\"\n            v-model=\"newTicket.usernm\"\n            :items=\"['Liam', 'Steve', 'Jack', 'Wiliam', 'Dona']\"\n            variant=\"outlined\"\n            required\n          ></v-select>\n        </v-form>\n      </v-card-text>\n      <v-card-actions class=\"ga-3\">\n        <v-btn\n          color=\"error\"\n          variant=\"flat\"\n          class=\"px-5\"\n          rounded=\"pill\"\n          @click=\"showCreateTicketModal = false\"\n          >Cancel</v-btn\n        >\n        <v-btn color=\"primary\" variant=\"flat\" class=\"px-5\" rounded=\"pill\" @click=\"createTicket\"\n          >Create</v-btn\n        >\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n","<script setup lang=\"ts\">\nimport { ref } from 'vue';\n// common components\nimport BaseBreadcrumb from '@/components/shared/BaseBreadcrumb.vue';\nimport TicketList from '~/components/apps/tickets/TicketList.vue';\n\nconst page = ref({ title: 'Tickets App' });\nconst breadcrumbs = ref([\n  {\n    text: 'Dashboard',\n    disabled: false,\n    href: '#',\n  },\n  {\n    text: 'Tickets App',\n    disabled: true,\n    href: '#',\n  },\n]);\n</script>\n\n<template>\n  <!-- ---------------------------------------------------- -->\n  <!-- Table Basic -->\n  <!-- ---------------------------------------------------- -->\n  <BaseBreadcrumb :title=\"page.title\" :breadcrumbs=\"breadcrumbs\"></BaseBreadcrumb>\n\n  <TicketList />\n</template>\n"],"version":3}
{"version":3,"file":"index-M-JtohCV.js","sources":["../../../../stores/apps/email.ts","../../../../components/shared/AppEmailCard.vue","../../../../components/apps/email/EmailCompose.vue","../../../../components/apps/email/EmailListing.vue","../../../../virtual:public?%2Fimages%2Fbackgrounds%2Fempty_mail.png","../../../../components/apps/email/EmailDetail.vue","../../../../pages/apps/email/index.vue"],"sourcesContent":["import { defineStore } from 'pinia';\nimport axios from '@/utils/axios';\nimport { uniqueId } from 'lodash';\nimport { sub } from 'date-fns';\n\ninterface EmailType {\n  emails: any[];\n  selectedEmail: any | null; // Add this line to hold the selected email\n}\n\nexport const useEmailStore = defineStore({\n  id: 'email',\n  state: (): EmailType => ({\n    emails: [],\n    selectedEmail: null, // Initialize as null\n  }),\n  actions: {\n    toggleStarred(emailId: number) {\n      const email = this.emails.find((e) => e.id === emailId);\n      if (email) {\n        email.starred = !email.starred;\n      }\n    },\n    toggleImportant(emailId: number) {\n      const email = this.emails.find((e) => e.id === emailId);\n      if (email) {\n        email.important = !email.important;\n      }\n    },\n    async fetchEmails() {\n      try {\n        const data = await axios.get('/api/data/email/EmailData');\n        this.emails = data.data;\n      } catch (error) {\n        alert(error);\n        console.log(error);\n      }\n    },\n    selectEmail(email: any) {\n      // Update the method to accept an email object\n      this.selectedEmail = email; // Store the selected email\n    },\n    deleteEmail(id: number) {\n      this.emails = this.emails.filter((email) => email.id !== id);\n      this.selectedEmail = null; // Clear selected email after deletion\n    },\n  },\n});\n","<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { useDisplay } from 'vuetify';\nconst { xs, lgAndUp } = useDisplay();\n\nconst sDrawer = ref(false); // Sidebar drawer for mobile\nconst eDrawer = ref(false); // Email details drawer\nconst selectedEmail = ref(null); // To store the selected email details\n\n// Method to select an email and open the email details drawer\nconst openEmailDetails = (email: any) => {\n  selectedEmail.value = email; // Store the selected email\n  eDrawer.value = true; // Open the email details drawer\n};\n</script>\n\n<template>\n  <div class=\"d-flex mainbox\">\n    <div class=\"compose pa-6\" v-if=\"lgAndUp\">\n      <slot name=\"mailCompose\"></slot>\n    </div>\n\n    <div class=\"mail-list\">\n      <v-divider class=\"d-lg-none d-block\" />\n      <slot name=\"mailList\" :openEmailDetails=\"openEmailDetails\"></slot>\n      <!-- Pass the method as a slot prop -->\n    </div>\n\n    <div class=\"mail-details pa-6 d-md-block d-none\">\n      <slot name=\"mailDetail\"></slot>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.compose {\n  max-width: 235px;\n  width: 100%;\n}\n.mail-list {\n  max-width: 340px;\n  width: 100%;\n}\n.mail-details {\n  width: 100%;\n}\n\n@media screen and (max-width: 991px) {\n  .mail-list {\n    max-width: 100%;\n  }\n}\n@media screen and (min-width: 991px) {\n  .compose,\n  .mail-list {\n    border-inline-end-width: thin !important;\n    border-inline-end-style: solid !important;\n    border-inline-end-color: rgba(var(--v-border-color), var(--v-border-opacity)) !important;\n  }\n}\n</style>\n","<script setup lang=\"ts\">\nimport { ref, onMounted } from 'vue';\nimport { Icon } from '@iconify/vue';\n\ninterface FilterType {\n  id?: number;\n  filterbyTitle?: string;\n  icon?: any;\n  name: string;\n  divider?: boolean;\n  color?: string;\n}\n\nconst filterData1: FilterType[] = [\n  { id: 2, name: 'inbox', icon: 'solar:inbox-line-broken' },\n  { id: 3, name: 'sent', icon: 'solar:plain-2-linear' },\n  { id: 4, name: 'draft', icon: 'solar:notes-linear' },\n  { id: 5, name: 'spam', icon: 'solar:flag-2-outline' },\n  { id: 6, name: 'trash', icon: 'solar:trash-bin-trash-outline' },\n  {\n    id: 7,\n    name: 'starred',\n    icon: 'solar:star-fall-minimalistic-2-line-duotone',\n  },\n  {\n    id: 8,\n    name: 'important',\n    icon: 'solar:bell-bing-linear',\n  },\n  {\n    id: 10,\n    name: 'promotional',\n    icon: 'solar:folder-open-linear',\n    color: 'primary',\n  },\n  {\n    id: 11,\n    name: 'social',\n    icon: 'solar:folder-open-linear',\n    color: 'error',\n  },\n  {\n    id: 12,\n    name: 'health',\n    icon: 'solar:folder-open-linear',\n    color: 'success',\n  },\n];\n\nconst selectedFilter = ref<string | null>('inbox');\n\nconst emit = defineEmits(['filter-change']);\nconst handleFilterClick = (filterName: string) => {\n  selectedFilter.value = filterName;\n  emit('filter-change', filterName);\n};\n\nonMounted(() => {\n  handleFilterClick('inbox');\n});\n\nconst showComposeEmail = ref(false);\n</script>\n\n<template>\n  <div>\n    <v-btn color=\"primary\" class=\"w-100 rounded-pill\" @click=\"showComposeEmail = true\"\n      >compose</v-btn\n    >\n    <!-- Sidebar Filter Lists -->\n    <v-list class=\"my-4 theme-list\">\n      <v-list-item\n        v-for=\"item in filterData1.slice(0, 5)\"\n        :key=\"item.id\"\n        :value=\"item\"\n        color=\"primary\"\n        rounded=\"md\"\n        class=\"mail-items\"\n        :class=\"{\n          'active bg-light text-primary': selectedFilter === item.name,\n        }\"\n        @click=\"handleFilterClick(item.name)\"\n      >\n        <template v-slot:prepend>\n          <Icon :icon=\"item.icon\" height=\"18\" />\n        </template>\n        <v-list-item-title class=\"ms-3 text-capitalize\">{{ item.name }}</v-list-item-title>\n      </v-list-item>\n\n      <v-list-item-title class=\"mt-4 mb-2 border-t pt-5 text-uppercase text-12 font-weight-semibold\"\n        >Sort By</v-list-item-title\n      >\n\n      <v-list-item\n        v-for=\"item in filterData1.slice(5, 7)\"\n        :key=\"item.id\"\n        :value=\"item\"\n        color=\"primary\"\n        rounded=\"md\"\n        class=\"mail-items\"\n        :class=\"{\n          'active bg-light text-primary': selectedFilter === item.name,\n        }\"\n        @click=\"handleFilterClick(item.name)\"\n      >\n        <template v-slot:prepend>\n          <Icon :icon=\"item.icon\" height=\"18\" />\n        </template>\n        <v-list-item-title class=\"ms-3 text-capitalize\">{{ item.name }}</v-list-item-title>\n      </v-list-item>\n\n      <v-list-item-title class=\"mt-4 mb-2 border-t pt-5 text-uppercase text-12 font-weight-semibold\"\n        >Labels</v-list-item-title\n      >\n\n      <v-list-item\n        v-for=\"item in filterData1.slice(7)\"\n        :key=\"item.id\"\n        :value=\"item\"\n        color=\"primary\"\n        rounded=\"md\"\n        class=\"mail-items\"\n        :class=\"{\n          'active bg-bglight text-primary': selectedFilter === item.name,\n        }\"\n        @click=\"handleFilterClick(item.name)\"\n      >\n        <template v-slot:prepend>\n          <Icon :icon=\"item.icon\" height=\"18\" :class=\"'text-' + item.color\" />\n        </template>\n        <v-list-item-title class=\"ms-3 text-capitalize\">{{ item.name }}</v-list-item-title>\n      </v-list-item>\n    </v-list>\n  </div>\n\n  <v-dialog v-model=\"showComposeEmail\" max-width=\"500px\">\n    <v-card>\n      <v-card-title class=\"pa-4 bg-primary\">Compose Mail</v-card-title>\n      <v-card-text>\n        <v-form>\n          <v-text-field label=\"To\" required></v-text-field>\n          <v-text-field label=\"Subject\" required></v-text-field>\n          <v-textarea label=\"Message\" rows=\"4\" required></v-textarea>\n          <v-file-input\n            prepend-icon=\"null\"\n            append-icon=\"null\"\n            label=\"Attachment\"\n            variant=\"outlined\"\n            hide-details\n            class=\"w-100 mx-0 no-icon\"\n          >\n          </v-file-input>\n        </v-form>\n      </v-card-text>\n      <v-card-actions class=\"ga-3\">\n        <v-btn\n          color=\"error\"\n          rounded=\"pill\"\n          variant=\"flat\"\n          class=\"px-5\"\n          @click=\"showComposeEmail = false\"\n          >Cancel</v-btn\n        >\n        <v-btn color=\"primary\" rounded=\"pill\" class=\"px-5\" variant=\"flat\">Send</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n","<script setup lang=\"ts\">\nimport { ref, computed, watch, onMounted } from 'vue';\nimport { useEmailStore } from '@/stores/apps/email'; // Import the store\nimport type { EmailType } from '@/types/apps/EmailTypes';\nimport { Icon } from '@iconify/vue';\nimport { format } from 'date-fns';\n\ninterface Props {\n  emails: EmailType[];\n}\n\nconst props = defineProps<Props>();\nconst store = useEmailStore();\n\nconst selectedEmail = ref<EmailType | null>(null);\nconst selectedEmails = ref<EmailType[]>([]);\nconst searchTerm = ref('');\n\n// Computed property to filter emails by name\nconst filteredEmails = computed(() => {\n  return props.emails.filter((email) =>\n    email.from.toLowerCase().includes(searchTerm.value.toLowerCase())\n  );\n});\n\n// Function to select an email\nconst selectEmail = (email: EmailType) => {\n  selectedEmail.value = email;\n  store.selectEmail(email);\n};\n\nconst toggleEmailSelection = (email: EmailType) => {\n  const index = selectedEmails.value.findIndex((e) => e.id === email.id);\n  if (index === -1) {\n    selectedEmails.value.push(email);\n  } else {\n    selectedEmails.value.splice(index, 1);\n  }\n};\n\n// Function to delete selected emails\nconst deleteSelectedEmails = (email: EmailType) => {\n  store.deleteEmail(email.id);\n  selectedEmails.value = selectedEmails.value.filter((e) => e.id !== email.id);\n};\n\nconst isAnyEmailSelected = computed(() => selectedEmails.value.length > 0);\nonMounted(() => {\n  if (props.emails.length > 0) {\n    selectedEmail.value = props.emails[0];\n    store.selectEmail(props.emails[0]);\n  }\n});\n\nwatch(\n  () => props.emails,\n  (newEmails) => {\n    if (newEmails.length > 0 && !selectedEmail.value) {\n      selectedEmail.value = newEmails[0];\n      store.selectEmail(newEmails[0]);\n    }\n  },\n  { immediate: true }\n);\n\nconst toggleIcon = (email: EmailType): void => {\n  store.toggleStarred(email.id); // Toggle the starred status\n};\n\nconst toggleIconimportant = (email: EmailType): void => {\n  store.toggleImportant(email.id); // Toggle the starred status\n};\n</script>\n\n<template>\n  <div>\n    <!-- Search input -->\n    <v-text-field\n      v-model=\"searchTerm\"\n      label=\"Search Emails\"\n      variant=\"outlined\"\n      hide-details\n      class=\"w-100 mb-1 pa-6\"\n      density=\"compact\"\n      @click.stop\n    >\n      <template v-slot:prepend-inner>\n        <Icon icon=\"solar:magnifer-linear\" height=\"18\" width=\"25\" />\n      </template>\n    </v-text-field>\n\n    <!-- Email list -->\n    <perfect-scrollbar class=\"max-h-600\">\n      <div v-if=\"filteredEmails.length\">\n        <div\n          v-for=\"email in filteredEmails\"\n          :key=\"email.id\"\n          :class=\"[\n            'email-items cursor-pointer',\n            { 'selected-email bg-bglight': email === selectedEmail },\n          ]\"\n          @click=\"selectEmail(email)\"\n        >\n          <div class=\"d-flex align-center justify-space-between\">\n            <div class=\"d-flex align-center\">\n              <v-checkbox\n                hide-details\n                color=\"primary\"\n                class=\"ms-n2\"\n                :model-value=\"selectedEmails.includes(email)\"\n                @change=\"toggleEmailSelection(email)\"\n              ></v-checkbox>\n              <h6 class=\"text-14 font-weight-semibold email-title\">\n                {{ email.from }}\n              </h6>\n            </div>\n            <v-chip\n              class=\"text-12\"\n              :color=\"\n                email.label === 'Promotional'\n                  ? 'primary'\n                  : email.label === 'Social'\n                    ? 'error'\n                    : email.label === 'Health'\n                      ? 'success'\n                      : 'secondary'\n              \"\n              variant=\"flat\"\n              size=\"small\"\n              rounded=\"pill\"\n              label\n            >\n              {{ email.label }}\n            </v-chip>\n          </div>\n          <div class=\"ps-8 mt-n1\">\n            <p class=\"text-truncate text-14\">{{ email.subject }}</p>\n            <div class=\"d-flex align-center justify-space-between mt-3\">\n              <div class=\"d-flex align-center ga-2\">\n                <!-- Toggle icon for each email based on its id -->\n                <button @click.stop=\"toggleIcon(email)\">\n                  <icon\n                    v-if=\"email.starred\"\n                    icon=\"solar:star-bold\"\n                    height=\"15\"\n                    class=\"text-warning\"\n                  />\n                  <icon v-else icon=\"solar:star-line-duotone\" height=\"15\" />\n                </button>\n\n                <button @click.stop=\"toggleIconimportant(email)\">\n                  <icon\n                    v-if=\"email.important\"\n                    icon=\"solar:info-circle-bold\"\n                    height=\"15\"\n                    class=\"text-info\"\n                  />\n                  <icon v-else icon=\"solar:info-circle-outline\" height=\"15\" />\n                </button>\n                <button @click.stop=\"deleteSelectedEmails(email)\">\n                  <icon\n                    icon=\"solar:trash-bin-trash-outline\"\n                    height=\"15\"\n                    v-if=\"selectedEmails.includes(email)\"\n                    class=\"delete-icon\"\n                  />\n                </button>\n              </div>\n              <small class=\"text-muted\">\n                {{ email.time ? format(new Date(email.time), 'E, MMM d') : 'N/A' }}\n              </small>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-else>\n        <div class=\"px-6\">\n          <v-alert color=\"warning\" variant=\"tonal\" class=\"mb-4\">\n            <template v-slot:prepend>\n              <v-icon class=\"text-24\">mdi-alert-circle-outline</v-icon>\n            </template>\n            <div>No Email found for this search</div>\n          </v-alert>\n        </div>\n      </div>\n    </perfect-scrollbar>\n  </div>\n</template>\n","import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/images/backgrounds/empty_mail.png\")","<!-- EmailDetail.vue -->\n<script setup lang=\"ts\">\nimport { useEmailStore } from '@/stores/apps/email';\nimport { Icon } from '@iconify/vue';\nimport type { EmailType } from '@/types/apps/EmailTypes';\nconst store = useEmailStore();\n// Method to delete the selected email\nconst deleteEmail = () => {\n  if (store.selectedEmail) {\n    store.deleteEmail(store.selectedEmail.id);\n  }\n};\n\nconst toggleIcon = (email: EmailType): void => {\n  store.toggleStarred(email.id); // Toggle the starred status\n};\nconst toggleIconimportant = (email: EmailType): void => {\n  store.toggleImportant(email.id); // Toggle the starred status\n};\n</script>\n\n<template>\n  <div v-if=\"store.selectedEmail\" class=\"email-detail\">\n    <div class=\"d-flex align-center ga-1 pb-6\">\n      <v-btn\n        icon\n        rounded=\"circle\"\n        size=\"small\"\n        variant=\"text\"\n        color=\"primary\"\n        @click.stop=\"toggleIcon(store.selectedEmail)\"\n      >\n        <icon\n          v-if=\"store.selectedEmail.starred\"\n          icon=\"solar:star-bold\"\n          height=\"18\"\n          class=\"text-warning\"\n        />\n        <icon v-else icon=\"solar:star-line-duotone\" class=\"textPrimary\" height=\"18\" />\n        <v-tooltip activator=\"parent\" location=\"bottom\">Star</v-tooltip>\n      </v-btn>\n      <v-btn\n        icon\n        rounded=\"circle\"\n        size=\"small\"\n        variant=\"text\"\n        color=\"primary\"\n        @click.stop=\"toggleIconimportant(store.selectedEmail)\"\n      >\n        <icon\n          v-if=\"store.selectedEmail.important\"\n          icon=\"solar:info-circle-bold\"\n          height=\"18\"\n          class=\"text-info\"\n        />\n        <icon v-else icon=\"solar:info-circle-outline\" class=\"textPrimary\" height=\"18\" />\n        <v-tooltip activator=\"parent\" location=\"bottom\">Importnat</v-tooltip>\n      </v-btn>\n      <v-btn icon rounded=\"circle\" size=\"small\" variant=\"text\" color=\"primary\" @click=\"deleteEmail\">\n        <icon icon=\"solar:trash-bin-minimalistic-linear\" class=\"textPrimary\" height=\"18\" />\n        <v-tooltip activator=\"parent\" location=\"bottom\">Delete</v-tooltip>\n      </v-btn>\n    </div>\n    <div class=\"d-flex align-center justify-space-between mb-7\">\n      <div class=\"d-flex align-center ga-2\">\n        <v-avatar size=\"48\">\n          <img :src=\"store.selectedEmail.thumbnail\" alt=\"user\" width=\"48\"\n        /></v-avatar>\n        <div>\n          <h6 class=\"text-14 lh-normal\">{{ store.selectedEmail.from }}</h6>\n          <p class=\"text-14 lh-normal\">{{ store.selectedEmail.To }}</p>\n        </div>\n      </div>\n      <v-chip\n        class=\"text-12\"\n        rounded=\"pill\"\n        :color=\"\n          store.selectedEmail.label === 'Promotional'\n            ? 'primary'\n            : store.selectedEmail.label === 'Social'\n              ? 'error'\n              : store.selectedEmail.label === 'Health'\n                ? 'success'\n                : 'secondary'\n        \"\n        variant=\"flat\"\n        size=\"small\"\n        label\n        >{{ store.selectedEmail.label }}</v-chip\n      >\n    </div>\n    <h5 class=\"text-20\">{{ store.selectedEmail.subject }}</h5>\n    <div class=\"email-content\">\n      <p class=\"opacity-80\" v-html=\"store.selectedEmail.emailContent\"></p>\n    </div>\n    <div v-if=\"store.selectedEmail.attchments != 0\">\n      <v-divider class=\"my-6\"></v-divider>\n      <h6 class=\"text-14 mb-3\">Attachments</h6>\n      <v-row>\n        <v-col cols=\"12\" md=\"4\" v-for=\"item in store.selectedEmail.attchments\" :key=\"item.id\">\n          <div class=\"d-flex align-center ga-3\">\n            <v-avatar size=\"48\" rounded=\"md\" color=\"light\">\n              <img :src=\"item.image\" alt=\"user\" width=\"24\" />\n            </v-avatar>\n            <div>\n              <h5 class=\"text-14 lh-normal cursor-pointer hover-primary\">\n                {{ item.title }}\n              </h5>\n              <p class=\"text-14\">{{ item.fileSize }}</p>\n            </div>\n          </div>\n        </v-col>\n      </v-row>\n      <v-divider class=\"mt-6\"></v-divider>\n    </div>\n    <div class=\"d-flex align-center ga-4 mt-6\">\n      <RouterLink\n        to=\"\"\n        class=\"cursor-pointer link d-flex align-center ga-1 textPrimary hover-primary text-14\"\n        ><Icon icon=\"solar:undo-left-bold\" height=\"16\" />Reply</RouterLink\n      >\n      <RouterLink\n        to=\"\"\n        class=\"cursor-pointer link d-flex align-center ga-1 textPrimary hover-primary text-14\"\n        ><Icon icon=\"solar:undo-right-bold\" height=\"16\" /> Forward</RouterLink\n      >\n    </div>\n  </div>\n  <div v-else>\n    <v-alert color=\"error\" variant=\"tonal\" class=\"mb-4\">\n      <template v-slot:prepend>\n        <v-icon class=\"text-24\">mdi-alert-circle-outline</v-icon>\n      </template>\n      <div>Select an email to view its details.</div>\n    </v-alert>\n    <div class=\"mx-auto text-center\">\n      <img src=\"/images/backgrounds/empty_mail.png\" alt=\"user\" />\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue';\nimport { useEmailStore } from '@/stores/apps/email'; // Adjust the path as necessary\nimport BaseBreadcrumb from '@/components/shared/BaseBreadcrumb.vue';\n\nimport type { EmailType } from '@/types/apps/EmailTypes';\nimport { useDisplay } from 'vuetify';\nimport AppEmailCard from '@/components/shared/AppEmailCard.vue';\nimport EmailCompose from '@/components/apps/email/EmailCompose.vue';\nimport EmailListing from '@/components/apps/email/EmailListing.vue';\nimport EmailDetail from '@/components/apps/email/EmailDetail.vue';\n\nconst store = useEmailStore();\nconst page = ref({ title: 'Email App' });\nconst breadcrumbs = ref([\n  { text: 'Dashboard', disabled: false, href: '#' },\n  { text: 'Email App', disabled: true, href: '#' },\n]);\n\nconst selectedFilter = ref<string>('inbox'); // Set default to inbox\n\n// Fetch emails when the component mounts\nonMounted(async () => {\n  await store.fetchEmails();\n  if (store.emails.length > 0) {\n    // Select the first email if there are any emails\n    store.selectEmail(store.emails[0]);\n  }\n});\n\nconst filteredEmails = computed(() => {\n  return selectedFilter.value\n    ? store.emails.filter((email) => email[selectedFilter.value as keyof EmailType])\n    : store.emails;\n});\n\nconst handleFilterChange = (filterName: string) => {\n  selectedFilter.value = filterName;\n};\n\nconst isMobileDrawerOpen = ref(false);\nconst isMobileEmailCategory = ref(false);\nconst { xs, lgAndUp } = useDisplay();\n</script>\n\n<template>\n  <BaseBreadcrumb :title=\"page.title\" :breadcrumbs=\"breadcrumbs\"></BaseBreadcrumb>\n\n  <v-card elevation=\"10\">\n    <AppEmailCard>\n      <template v-slot:mailCompose>\n        <EmailCompose @filter-change=\"handleFilterChange\" />\n      </template>\n\n      <template v-slot:mailList>\n        <div class=\"pa-lg-0 pa-6 pb-0\">\n          <v-btn\n            block\n            @click=\"isMobileEmailCategory = !isMobileEmailCategory\"\n            color=\"primary\"\n            class=\"d-lg-none d-md-flex d-sm-flex\"\n          >\n            <Menu2Icon size=\"20\" class=\"mr-2\" /> Email Category\n          </v-btn>\n        </div>\n        <EmailListing :emails=\"filteredEmails\" class=\"d-md-block d-none\" />\n        <EmailListing\n          :emails=\"filteredEmails\"\n          class=\"d-md-none d-block\"\n          @click=\"isMobileDrawerOpen = !isMobileDrawerOpen\"\n        />\n      </template>\n\n      <template v-slot:mailDetail>\n        <EmailDetail class=\"d-md-block d-none\" />\n      </template>\n\n      <template v-slot:mobileLeftContent>\n        <EmailCompose @filter-change=\"handleFilterChange\" />\n      </template>\n    </AppEmailCard>\n  </v-card>\n  <!-- Drawer for Email Detail mobile view -->\n  <v-navigation-drawer\n    v-model=\"isMobileDrawerOpen\"\n    location=\"right\"\n    temporary\n    width=\"350\"\n    class=\"drawer-top-zero\"\n  >\n    <v-card-text class=\"pa-6\">\n      <EmailDetail />\n    </v-card-text>\n  </v-navigation-drawer>\n\n  <!-- Drawer for Email Detail mobile view -->\n  <v-navigation-drawer\n    v-if=\"!lgAndUp\"\n    v-model=\"isMobileEmailCategory\"\n    location=\"left\"\n    temporary\n    width=\"350\"\n    class=\"drawer-top-zero\"\n  >\n    <v-card-text class=\"pa-6\">\n      <EmailCompose @filter-change=\"handleFilterChange\" />\n    </v-card-text>\n  </v-navigation-drawer>\n</template>\n"],"names":["axios"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUO,MAAM,gBAAgB,YAAY;AAAA,EACvC,IAAI;AAAA,EACJ,OAAO,OAAkB;AAAA,IACvB,QAAQ,CAAC;AAAA,IACT,eAAe;AAAA;AAAA,EAAA;AAAA,EAEjB,SAAS;AAAA,IACP,cAAc,SAAiB;AACvB,YAAA,QAAQ,KAAK,OAAO,KAAK,CAAC,MAAM,EAAE,OAAO,OAAO;AACtD,UAAI,OAAO;AACH,cAAA,UAAU,CAAC,MAAM;AAAA,MAAA;AAAA,IAE3B;AAAA,IACA,gBAAgB,SAAiB;AACzB,YAAA,QAAQ,KAAK,OAAO,KAAK,CAAC,MAAM,EAAE,OAAO,OAAO;AACtD,UAAI,OAAO;AACH,cAAA,YAAY,CAAC,MAAM;AAAA,MAAA;AAAA,IAE7B;AAAA,IACA,MAAM,cAAc;AACd,UAAA;AACF,cAAM,OAAO,MAAMA,cAAM,IAAI,2BAA2B;AACxD,aAAK,SAAS,KAAK;AAAA,eACZ,OAAO;AACd,cAAM,KAAK;AACX,gBAAQ,IAAI,KAAK;AAAA,MAAA;AAAA,IAErB;AAAA,IACA,YAAY,OAAY;AAEtB,WAAK,gBAAgB;AAAA,IACvB;AAAA,IACA,YAAY,IAAY;AACjB,WAAA,SAAS,KAAK,OAAO,OAAO,CAAC,UAAU,MAAM,OAAO,EAAE;AAC3D,WAAK,gBAAgB;AAAA,IAAA;AAAA,EACvB;AAEJ,CAAC;;;;;AC5CD,UAAM,EAAM,QAAQ,IAAI,WAAW;AAEnB,QAAI,KAAK;AACnB,UAAA,UAAU,IAAI,KAAK;AACnB,UAAA,gBAAgB,IAAI,IAAI;AAGxB,UAAA,mBAAmB,CAAC,UAAe;AACvC,oBAAc,QAAQ;AACtB,cAAQ,QAAQ;AAAA,IAClB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,UAAM,cAA4B;AAAA,MAChC,EAAE,IAAI,GAAG,MAAM,SAAS,MAAM,0BAA0B;AAAA,MACxD,EAAE,IAAI,GAAG,MAAM,QAAQ,MAAM,uBAAuB;AAAA,MACpD,EAAE,IAAI,GAAG,MAAM,SAAS,MAAM,qBAAqB;AAAA,MACnD,EAAE,IAAI,GAAG,MAAM,QAAQ,MAAM,uBAAuB;AAAA,MACpD,EAAE,IAAI,GAAG,MAAM,SAAS,MAAM,gCAAgC;AAAA,MAC9D;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,OAAO;AAAA,MAAA;AAAA,IAEX;AAEM,UAAA,iBAAiB,IAAmB,OAAO;AAEjD,UAAM,OAAO;AACP,UAAA,oBAAoB,CAAC,eAAuB;AAChD,qBAAe,QAAQ;AACvB,WAAK,iBAAiB,UAAU;AAAA,IAClC;AAMM,UAAA,mBAAmlDlC,UAAM,QAAQ;AACd,UAAM,QAAQ,cAAc;AAEtB,UAAA,gBAAgB,IAAsB,IAAI;AAC1C,UAAA,iBAAiB,IAAiB,EAAE;AACpC,UAAA,aAAa,IAAI,EAAE;AAGnB,UAAA,iBAAiB,SAAS,MAAM;AACpC,aAAO,MAAM,OAAO;AAAA,QAAO,CAAC,UAC1B,MAAM,KAAK,cAAc,SAAS,WAAW,MAAM,YAAa,CAAA;AAAA,MAClE;AAAA,IAAA,CACD;AAGK,UAAA,cAAc,CAAC,UAAqB;AACxC,oBAAc,QAAQ;AACtB,YAAM,YAAY,KAAK;AAAA,IACzB;AAEM,UAAA,uBAAuB,CAAC,UAAqB;AAC3C,YAAA,QAAQ,eAAe,MAAM,UAAU,CAAC,MAAM,EAAE,OAAO,MAAM,EAAE;AACrE,UAAI,UAAU,IAAI;AACD,uBAAA,MAAM,KAAK,KAAK;AAAA,MAAA,OAC1B;AACU,uBAAA,MAAM,OAAO,OAAO,CAAC;AAAA,MAAA;AAAA,IAExC;AAGM,UAAA,uBAAuB,CAAC,UAAqB;AAC3C,YAAA,YAAY,MAAM,EAAE;AACX,qBAAA,QAAQ,eAAe,MAAM,OAAO,CAAC,MAAM,EAAE,OAAO,MAAM,EAAE;AAAA,IAC7E;AAE2B,aAAS,MAAM,eAAe,MAAM,SAAS,CAAC;AAQzE;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,cAAc;AACb,YAAI,UAAU,SAAS,KAAK,CAAC,cAAc,OAAO;AAClC,wBAAA,QAAQ,UAAU,CAAC;AAC3B,gBAAA,YAAY,UAAU,CAAC,CAAC;AAAA,QAAA;AAAA,MAElC;AAAA,MACA,EAAE,WAAW,KAAK;AAAA,IACpB;AAEM,UAAA,aAAa,CAAC,UAA2B;AACvC,YAAA,cAAc,MAAM,EAAE;AAAA,IAC9B;AAEM,UAAA,sBAAsB,CAAC,UAA2B;AAChD,YAAA,gBAAgB,MAAM,EAAE;AAAA,IAChC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvEuD,MAAe,aAAA,gBAAgB,oCAAoC;;;;;ACK1H,UAAM,QAAQ,cAAc;AAE5B,UAAM,cAAc,MAAM;AACxB,UAAI,MAAM,eAAe;AACjB,cAAA,YAAY,MAAM,cAAc,EAAE;AAAA,MAAA;AAAA,IAE5C;AAEM,UAAA,aAAa,CAAC,UAA2B;AACvC,YAAA,cAAc,MAAM,EAAE;AAAA,IAC9B;AACM,UAAA,sBAAsB,CAAC,UAA2B;AAChD,YAAA,gBAAgB,MAAM,EAAE;AAAA,IAChC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA,UAAM,QAAQ,cAAc;AAC5B,UAAM,OAAO,IAAI,EAAE,OAAO,aAAa;AACvC,UAAM,cAAc,IAAI;AAAA,MACtB,EAAE,MAAM,aAAa,UAAU,OAAO,MAAM,IAAI;AAAA,MAChD,EAAE,MAAM,aAAa,UAAU,MAAM,MAAM,IAAI;AAAA,IAAA,CAChD;AAEK,UAAA,iBAAiB,IAAY,OAAO;AAWpC,UAAA,iBAAiB,SAAS,MAAM;AACpC,aAAO,eAAe,QAClB,MAAM,OAAO,OAAO,CAAC,UAAU,MAAM,eAAe,KAAwB,CAAC,IAC7E,MAAM;AAAA,IAAA,CACX;AAEK,UAAA,qBAAqB,CAAC,eAAuB;AACjD,qBAAe,QAAQ;AAAA,IACzB;AAEM,UAAA,qBAAqB,IAAI,KAAK;AAC9B,UAAA,wBAAwB,IAAI,KAAK;AACvC,UAAM,EAAM,QAAQ,IAAI,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
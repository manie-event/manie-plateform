{"file":"blog-DVMJJEFA.js","mappings":";AAaO,MAAM,eAAe,YAAY;AAAA,EACtC,IAAI;AAAA,EAEJ,OAAO,OAAmB;AAAA,IACxB,WAAW,CAAC;AAAA,IACZ,aAAa,CAAC;AAAA,IACd,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,cAAc,CAAA;AAAA,EAAC;AAAA,EAEjB,SAAS;AAAA;AAAA,IAEP,SAAS,OAAO;AACd,aAAO,MAAM;AAAA,IAAA;AAAA,EAEjB;AAAA,EACA,SAAS;AAAA;AAAA,IAEP,MAAM,aAAa;AACb,UAAA;AACF,cAAM,OAAO,MAAMA,cAAM,IAAI,0BAA0B;AACvD,aAAK,YAAY,KAAK;AAAA,eACf,OAAO;AACd,cAAM,KAAK;AACX,gBAAQ,IAAI,KAAK;AAAA,MAAA;AAAA,IAErB;AAAA,IACA,MAAM,UAAU,OAAe;AACzB,UAAA;AACF,cAAM,WAAW,MAAMA,cAAM,KAAK,uBAAuB,EAAE,OAAO;AAC7D,aAAA,eAAe,SAAS,KAAK;AAAA,eAC3B,OAAO;AACd,cAAM,KAAK;AACX,gBAAQ,IAAI,KAAK;AAAA,MAAA;AAAA,IACnB;AAAA,EACF;AAEJ,CAAC;","names":["axios"],"sources":["../../../../stores/apps/blog.ts"],"sourcesContent":["import { defineStore } from 'pinia';\n// project imports\nimport axios from '@/utils/axios';\nimport type { blogpostType } from '@/types/apps/BlogTypes';\n\ninterface blogTypeDe {\n  blogposts: blogpostType[];\n  recentPosts: blogpostType[];\n  blogSearch: string;\n  sortBy: string;\n  selectedPost: blogpostType[] | any;\n}\n\nexport const useBlogStore = defineStore({\n  id: 'blog',\n\n  state: (): blogTypeDe => ({\n    blogposts: [],\n    recentPosts: [],\n    blogSearch: '',\n    sortBy: 'newest',\n    selectedPost: [],\n  }),\n  getters: {\n    // Get Post from Getters\n    getPosts(state) {\n      return state.blogposts;\n    },\n  },\n  actions: {\n    // Fetch Blog from action\n    async fetchPosts() {\n      try {\n        const data = await axios.get('/api/data/blog/BlogPosts');\n        this.blogposts = data.data;\n      } catch (error) {\n        alert(error);\n        console.log(error);\n      }\n    },\n    async fetchPost(title: string) {\n      try {\n        const response = await axios.post('/api/data/blog/post', { title });\n        this.selectedPost = response.data.post;\n      } catch (error) {\n        alert(error);\n        console.log(error);\n      }\n    },\n  },\n});\n"],"version":3}
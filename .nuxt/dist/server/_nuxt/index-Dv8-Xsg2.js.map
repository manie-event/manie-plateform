{"version":3,"file":"index-Dv8-Xsg2.js","sources":["../../../../stores/apps/chat.ts","../../../../components/apps/chats/ChatListing.vue","../../../../components/apps/chats/ChatSendMsg.vue","../../../../components/apps/chats/ChatInfo.vue","../../../../components/apps/chats/ChatDetail.vue","../../../../pages/apps/chats/index.vue"],"sourcesContent":["import { defineStore } from 'pinia';\n// project imports\nimport axios from '@/utils/axios';\nimport { uniqueId } from 'lodash';\nimport { sub } from 'date-fns';\n\ninterface chatType {\n  chats: any;\n  chatContent: any;\n}\n\nexport const useChatStore = defineStore({\n  id: 'chat',\n  state: (): chatType => ({\n    chats: [],\n    chatContent: 1,\n  }),\n  getters: {\n    // Get Chats from Getters\n    // getChats(state) {\n    //     return state.chats;\n    // }\n  },\n  actions: {\n    // Fetch Chat from action\n    async fetchChats() {\n      try {\n        const data = await axios.get('/api/data/chat/ChatData');\n        this.chats = data.data;\n      } catch (error) {\n        alert(error);\n        console.log(error);\n      }\n    },\n    //select chat\n    SelectChat(itemID: number) {\n      this.chatContent = itemID;\n    },\n    sendMsg(itemID: number, item: string) {\n      const newMessage = {\n        id: itemID,\n        msg: item,\n        type: 'text',\n        attachments: [],\n        createdAt: sub(new Date(), { seconds: 1 }),\n        senderId: itemID,\n      };\n\n      this.chats = this.chats.filter((chat: any) => {\n        return chat.id === itemID\n          ? {\n              ...chat,\n              ...chat.chatHistory.push(newMessage),\n            }\n          : chat;\n      });\n    },\n  },\n});\n","<script setup>\nimport { ref, onMounted, computed } from 'vue';\nimport { useChatStore } from '@/stores/apps/chat';\nimport { formatDistanceToNowStrict } from 'date-fns';\nimport { last } from 'lodash';\n\nconst store = useChatStore();\n\nonMounted(() => {\n  store.fetchChats();\n});\n\nconst getChats = computed(() => {\n  return store.chats;\n});\n\nconst chatItem = getChats;\nconst searchValue = ref('');\nconst filteredChats = computed(() => {\n  return chatItem.value.filter((chat) => {\n    return chat.name.toLowerCase().includes(searchValue.value.toLowerCase());\n  });\n});\nconst lastActivity = (chat) => last(chat.chatHistory).createdAt;\n\nconst items = ref([\n  { title: 'Sort by time' },\n  { title: 'Sort by Unread' },\n  { title: 'Mark all as read' },\n]);\n</script>\n<template>\n  <v-sheet>\n    <div class=\"px-6 pt-3\">\n      <v-text-field\n        variant=\"outlined\"\n        v-model=\"searchValue\"\n        append-inner-icon=\"mdi-magnify\"\n        placeholder=\"Search Contact\"\n        hide-details\n        density=\"compact\"\n      ></v-text-field>\n      <v-menu>\n        <template v-slot:activator=\"{ props }\">\n          <v-btn color=\"white\" variant=\"flat\" class=\"mt-4 text-medium-emphasis\" v-bind=\"props\"\n            >Recent Chats <ChevronDownIcon size=\"18\" class=\"ml-2\" />\n          </v-btn>\n        </template>\n        <v-list class=\"elevation-10\">\n          <v-list-item v-for=\"(item, index) in items\" :key=\"index\" :value=\"index\">\n            <v-list-item-title>{{ item.title }}</v-list-item-title>\n          </v-list-item>\n        </v-list>\n      </v-menu>\n    </div>\n  </v-sheet>\n  <perfect-scrollbar class=\"lgScroll h-100\">\n    <v-list>\n      <!---Single Item-->\n      <v-list-item\n        :value=\"chat.id\"\n        color=\"primary\"\n        class=\"text-no-wrap chatItem\"\n        v-for=\"chat in filteredChats\"\n        :key=\"chat.id\"\n        lines=\"two\"\n        :active=\"store.chatContent === chat.id\"\n        @click=\"store.SelectChat(chat.id)\"\n      >\n        <!---Avatar-->\n        <template v-slot:prepend>\n          <v-avatar>\n            <img :src=\"chat.thumb\" alt=\"pro\" width=\"50\" />\n          </v-avatar>\n          <v-badge\n            class=\"badg-dot\"\n            dot\n            :color=\"\n              chat.status === 'away'\n                ? 'warning'\n                : chat.status === 'busy'\n                  ? 'error'\n                  : chat.status === 'online'\n                    ? 'success'\n                    : 'containerBg'\n            \"\n          >\n          </v-badge>\n        </template>\n        <!---Name-->\n        <v-list-item-title class=\"text-subtitle-1 textPrimary w-100 font-weight-semibold\">{{\n          chat.name\n        }}</v-list-item-title>\n        <!---Subtitle-->\n        <v-sheet v-if=\"chat.chatHistory.slice(-1)[0].type == 'img'\">\n          <small class=\"textPrimary text-subtitle-2\">Sent a Photo</small>\n        </v-sheet>\n        <div class=\"text-subtitle-2 textPrimary mt-1 text-truncate w-100\" v-else>\n          {{ chat.chatHistory.slice(-1)[0].msg }}\n        </div>\n        <!---Last seen--->\n        <template v-slot:append>\n          <div class=\"d-flex flex-column text-right w-25\">\n            <small class=\"textPrimary text-subtitle-2\">\n              {{\n                formatDistanceToNowStrict(new Date(lastActivity(chat)), {\n                  addSuffix: false,\n                })\n              }}\n            </small>\n          </div>\n        </template>\n      </v-list-item>\n    </v-list>\n  </perfect-scrollbar>\n</template>\n<style>\n.chatItem {\n  padding: 16px 24px !important;\n  border-bottom: 1px solid rgb(var(--v-theme-inputBorder), 0.1);\n}\n.badg-dot {\n  position: relative;\n  bottom: -10px;\n}\n.lgScroll {\n  height: 500px;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { ref, computed } from 'vue';\nimport { useChatStore } from '@/stores/apps/chat';\n\nconst msg = ref('');\nconst store = useChatStore();\n\nfunction addItemAndClear(item: string) {\n  console.log(item);\n  if (item.length === 0) {\n    return;\n  }\n  store.sendMsg(store.chatContent, msg.value);\n  msg.value = '';\n}\n</script>\n\n<template>\n  <form class=\"d-flex align-center pa-4\" @submit.prevent=\"addItemAndClear(msg)\">\n    <v-btn icon variant=\"text\" class=\"text-medium-emphasis\"><MoodSmileIcon size=\"24\" /></v-btn>\n\n    <v-text-field\n      variant=\"solo\"\n      hide-details\n      v-model=\"msg\"\n      color=\"primary\"\n      class=\"shadow-none\"\n      density=\"compact\"\n      placeholder=\"Type a Message\"\n    ></v-text-field>\n    <v-btn icon variant=\"text\" type=\"submit\" class=\"text-medium-emphasis\" :disabled=\"!msg\">\n      <SendIcon size=\"20\" />\n    </v-btn>\n\n    <v-btn icon variant=\"text\" class=\"text-medium-emphasis\"><PhotoIcon size=\"20\" /></v-btn>\n    <v-btn icon variant=\"text\" class=\"text-medium-emphasis\"><PaperclipIcon size=\"20\" /></v-btn>\n  </form>\n</template>\n\n<style>\n.shadow-none .v-field--no-label {\n  --v-field-padding-top: -7px;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue';\nimport { useChatStore } from '@/stores/apps/chat';\nimport { uniq, flatten } from 'lodash';\n\nconst props = defineProps({ chatDetail: Object });\n\nconst totalAttachment = computed(() => {\n  return uniq(flatten(props.chatDetail?.chatHistory.map((item: any) => item.attachment))).length;\n});\n\nconst totalMedia = computed(() => {\n  return (\n    uniq(\n      flatten(\n        props.chatDetail?.chatHistory.map((item: any) => (item?.type === 'img' ? item.msg : null))\n      )\n    ).length - 1\n  );\n});\n</script>\n<template>\n  <div v-if=\"chatDetail\" class=\"pa-6\">\n    <h6 class=\"text-h6 mb-3\">Media ({{ totalMedia }})</h6>\n    <div v-for=\"chat in chatDetail.chatHistory\" :key=\"chat.id\">\n      <div v-if=\"chat.type == 'img'\">\n        <img :src=\"chat.msg\" alt=\"img\" width=\"100\" />\n      </div>\n    </div>\n\n    <h6 class=\"text-h6 mb-3 mt-7\">Attachments ({{ totalAttachment }})</h6>\n    <v-sheet v-if=\"totalAttachment != 0\">\n      <div v-for=\"chat in chatDetail.chatHistory\" :key=\"chat.id\">\n        <div class=\"d-flex align-center mt-7\" v-for=\"atch in chat.attachment\" :key=\"atch.file\">\n          <v-avatar class=\"rounded-md bg-lightsecondary\" size=\"48\">\n            <img width=\"24\" alt=\"file\" :src=\"atch.icon\" />\n          </v-avatar>\n          <div class=\"pl-4\">\n            <h6 class=\"text-subtitle-1 font-weight-semibold\">{{ atch.file }}</h6>\n            <h5 class=\"text-subtitle-2 mt-1\">{{ atch.fileSize }}</h5>\n          </div>\n        </div>\n      </div>\n    </v-sheet>\n    <v-sheet v-else>\n      <v-alert\n        color=\"error\"\n        type=\"warning\"\n        density=\"compact\"\n        variant=\"tonal\"\n        class=\"text-subtitle-1\"\n      >\n        No Attachments Found!\n      </v-alert>\n    </v-sheet>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue';\nimport { useChatStore } from '@/stores/apps/chat';\nimport { formatDistanceToNowStrict } from 'date-fns';\nimport ChatSendMsg from './ChatSendMsg.vue';\nimport ChatInfo from './ChatInfo.vue';\nimport { useDisplay } from 'vuetify';\n\nconst { lgAndUp } = useDisplay();\n\nconst store = useChatStore();\nonMounted(() => {\n  store.fetchChats();\n});\n\nconst chatDetail: any = computed(() => {\n  return store.chats[store.chatContent - 1];\n});\n\nconst Rpart = ref(lgAndUp ? true : false);\nconst isMobileDrawerOpen = ref(false);\nfunction toggleRpart() {\n  Rpart.value = !Rpart.value;\n}\n</script>\n<template>\n  <div v-if=\"chatDetail\" class=\"customHeight\">\n    <div>\n      <div class=\"d-flex align-center gap-3 pa-4 justify-space-between\">\n        <!---Topbar Row-->\n        <div class=\"d-flex gap-2 align-center\">\n          <!---User Avatar-->\n          <v-avatar>\n            <img :src=\"chatDetail.thumb\" alt=\"pro\" width=\"50\" />\n          </v-avatar>\n\n          <v-badge\n            class=\"badg-dotDetail\"\n            dot\n            :color=\"\n              chatDetail.status === 'away'\n                ? 'warning'\n                : chatDetail.status === 'busy'\n                  ? 'error'\n                  : chatDetail.status === 'online'\n                    ? 'success'\n                    : 'containerBg'\n            \"\n          >\n          </v-badge>\n          <!---Name & Last seen-->\n          <div>\n            <h5 class=\"text-h5 mb-n1\">{{ chatDetail.name }}</h5>\n            <small class=\"textPrimary\"> {{ chatDetail.status }} </small>\n          </div>\n        </div>\n        <!---Topbar Icons-->\n        <div class=\"d-flex\">\n          <v-btn icon variant=\"text\" class=\"text-medium-emphasis\">\n            <PhoneIcon size=\"24\" />\n          </v-btn>\n          <v-btn icon variant=\"text\" class=\"text-medium-emphasis\">\n            <VideoPlusIcon size=\"24\" />\n          </v-btn>\n          <v-btn\n            icon\n            variant=\"text\"\n            class=\"text-medium-emphasis d-lg-flex d-none\"\n            @click=\"toggleRpart\"\n          >\n            <Menu2Icon size=\"24\" />\n          </v-btn>\n          <v-btn\n            icon\n            variant=\"text\"\n            class=\"text-medium-emphasis d-lg-none d-flex\"\n            @click=\"isMobileDrawerOpen = !isMobileDrawerOpen\"\n          >\n            <DotsVerticalIcon size=\"24\" />\n          </v-btn>\n        </div>\n        <!---Topbar Icons-->\n      </div>\n      <v-divider />\n      <!---Chat History-->\n      <perfect-scrollbar class=\"rightpartHeight h-100\">\n        <div class=\"d-flex\">\n          <div class=\"w-100\" style=\"height: calc(100vh - 360px)\">\n            <div v-for=\"chat in chatDetail.chatHistory\" :key=\"chat.id\" class=\"pa-5\">\n              <div v-if=\"chatDetail.id === chat.senderId\" class=\"justify-end d-flex text-end mb-1\">\n                <div>\n                  <small class=\"text-medium-emphasis text-subtitle-2\" v-if=\"chat.createdAt\">\n                    {{\n                      formatDistanceToNowStrict(new Date(chat.createdAt), {\n                        addSuffix: false,\n                      })\n                    }}\n                    ago</small\n                  >\n\n                  <v-sheet\n                    class=\"bg-lightprimary rounded-md px-3 py-2 mb-1\"\n                    v-if=\"chat.type == 'text'\"\n                  >\n                    <p class=\"text-body-1\">{{ chat.msg }}</p>\n                  </v-sheet>\n                  <v-sheet v-if=\"chat.type == 'img'\" class=\"mb-1\">\n                    <img :src=\"chat.msg\" class=\"rounded-md\" alt=\"pro\" width=\"250\" />\n                  </v-sheet>\n                </div>\n              </div>\n              <div v-else class=\"d-flex align-items-start gap-3 mb-1\">\n                <!---User Avatar-->\n                <v-avatar>\n                  <img :src=\"chatDetail.thumb\" alt=\"pro\" width=\"40\" />\n                </v-avatar>\n                <div>\n                  <small class=\"text-medium-emphasis text-subtitle-2\" v-if=\"chat.createdAt\">\n                    {{ chatDetail.name }},\n                    {{\n                      formatDistanceToNowStrict(new Date(chat.createdAt), {\n                        addSuffix: false,\n                      })\n                    }}\n                    ago\n                  </small>\n\n                  <v-sheet\n                    class=\"bg-lightsecondary rounded-md px-3 py-2 mb-1\"\n                    v-if=\"chat.type == 'text'\"\n                  >\n                    <p class=\"text-body-1\">{{ chat.msg }}</p>\n                  </v-sheet>\n                  <v-sheet v-if=\"chat.type == 'img'\" class=\"mb-1\">\n                    <img :src=\"chat.msg\" class=\"rounded-md\" alt=\"pro\" width=\"250\" />\n                  </v-sheet>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"right-sidebar d-lg-flex d-none\" v-if=\"Rpart\">\n            <v-sheet>\n              <ChatInfo :chatDetail=\"chatDetail\" />\n            </v-sheet>\n          </div>\n        </div>\n      </perfect-scrollbar>\n    </div>\n    <v-divider />\n    <!---Chat send-->\n    <ChatSendMsg />\n  </div>\n  <v-navigation-drawer\n    v-model=\"isMobileDrawerOpen\"\n    location=\"right\"\n    class=\"drawer-top-zero\"\n    temporary\n    width=\"350\"\n  >\n    <ChatInfo :chatDetail=\"chatDetail\" />\n  </v-navigation-drawer>\n</template>\n<style lang=\"scss\">\n.rightpartHeight {\n  height: 530px;\n}\n.badg-dotDetail {\n  left: -9px;\n  position: relative;\n  bottom: -10px;\n}\n\n.toggleLeft {\n  position: absolute;\n  right: 15px;\n  top: 15px;\n}\n.right-sidebar {\n  width: 320px;\n  border-left: 1px solid rgb(var(--v-theme-borderColor));\n  transition: 0.1s ease-in;\n  flex-shrink: 0;\n}\n\n.HideLeftPart {\n  display: none;\n}\n\n@media (max-width: 960px) {\n  .right-sidebar {\n    position: absolute;\n    right: -320px;\n    &.showLeftPart {\n      right: 0;\n      z-index: 2;\n      box-shadow: 2px 1px 20px rgba(0, 0, 0, 0.1);\n    }\n  }\n  .boxoverlay {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    z-index: 1;\n    background: rgba(0, 0, 0, 0.2);\n  }\n}\n</style>\n","<script setup lang=\"ts\">\nimport { ref } from 'vue';\n// common components\nimport BaseBreadcrumb from '@/components/shared/BaseBreadcrumb.vue';\nimport AppBaseCard from '@/components/shared/AppBaseCard.vue';\nimport ChatListing from '@/components/apps/chats/ChatListing.vue';\nimport ChatDetail from '@/components/apps/chats/ChatDetail.vue';\nimport ChatProfile from '@/components/apps/chats/ChatProfile.vue';\n\n// theme breadcrumb\nconst page = ref({ title: 'Chat app' });\n\nconst breadcrumbs = ref([\n  {\n    text: 'Messenger',\n    disabled: true,\n    href: '#',\n  },\n]);\n</script>\n\n<template>\n  <!-- ---------------------------------------------------- -->\n  <!-- Table Basic -->\n  <!-- ---------------------------------------------------- -->\n  <!-- <BaseBreadcrumb :title=\"page.title\" :breadcrumbs=\"breadcrumbs\"></BaseBreadcrumb> -->\n\n  <v-card elevation=\"10\">\n    <AppBaseCard>\n      <template v-slot:leftpart>\n        <div class=\"no-scrollbar\">\n          <ChatProfile />\n          <ChatListing />\n        </div>\n      </template>\n      <template v-slot:rightpart>\n        <ChatDetail />\n      </template>\n\n      <template v-slot:mobileLeftContent>\n        <ChatProfile />\n        <ChatListing />\n      </template>\n    </AppBaseCard>\n  </v-card>\n</template>\n\n<style scoped lang=\"scss\">\n@media (max-width: 1279px) {\n  .v-card {\n    position: unset;\n  }\n}\n</style>\n"],"names":["axios"],"mappings":"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"}
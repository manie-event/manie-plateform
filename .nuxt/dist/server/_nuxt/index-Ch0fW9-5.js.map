{"version":3,"file":"index-Ch0fW9-5.js","sources":["../../../../stores/apps/notes.ts","../../../../components/apps/notes/NotesListing.vue","../../../../components/apps/notes/AddNote.vue","../../../../components/apps/notes/NotesContent.vue"],"sourcesContent":["import { defineStore } from 'pinia';\n// project imports\nimport axios from '@/utils/axios';\nimport { map } from 'lodash';\n\ninterface NotesType {\n  id?: number | any;\n  color?: string;\n  title?: string;\n  datef?: Date | any;\n  deleted?: boolean;\n}\n\ninterface noteType {\n  notes: NotesType[];\n  notesContent: number;\n  noteSearch: string;\n}\n\nexport const useNoteStore = defineStore({\n  id: 'notes',\n  state: (): noteType => ({\n    notes: [],\n    notesContent: 1,\n    noteSearch: '',\n  }),\n  actions: {\n    // Fetch notes\n    async fetchNotes() {\n      try {\n        const data = await axios.get('/api/data/notes/NotesData');\n        this.notes = data.data;\n      } catch (error) {\n        alert(error);\n        console.log(error);\n      }\n    },\n\n    //select chat\n    SelectNote(itemID: number) {\n      this.notesContent = itemID;\n    },\n\n    deleteNote(itemID: number) {\n      const index = this.notes.findIndex((p) => p.id == itemID);\n      this.notes.splice(index, 1);\n    },\n    updateNote(itemID: number, itemColor: any) {\n      this.notes = map(this.notes, (note: any) => {\n        if (note.id === itemID) {\n          return {\n            ...note,\n            color: itemColor,\n          };\n        }\n        return note;\n      });\n    },\n  },\n});\n","<script setup lang=\"ts\">\nimport { ref, onMounted, computed } from 'vue';\nimport { useNoteStore } from '@/stores/apps/notes';\nimport { TrashIcon } from 'vue-tabler-icons';\n\nconst store = useNoteStore();\n\nonMounted(() => {\n  store.fetchNotes();\n});\n\nconst getNotes = computed(() => {\n  return store.notes;\n});\n\nconst NoteItem = getNotes;\n\nconst searchValue = ref('');\nconst filteredNotes = computed(() => {\n  return NoteItem.value.filter((note) => {\n    return note.title?.toLowerCase().includes(searchValue.value.toLowerCase());\n  });\n});\n</script>\n\n<template>\n  <!-- ---------------------------------------------------- -->\n  <!-- Table Basic -->\n  <!-- ---------------------------------------------------- -->\n  <div class=\"pa-6\">\n    <h4 class=\"text-h6 mb-4 font-weight-semibold\">All Notes</h4>\n\n    <div class=\"mb-5\">\n      <v-text-field\n        variant=\"outlined\"\n        v-model=\"searchValue\"\n        append-inner-icon=\"mdi-magnify\"\n        placeholder=\"Search Notes\"\n        hide-details\n        density=\"compact\"\n      ></v-text-field>\n    </div>\n\n    <v-sheet\n      :class=\"'note-sheet pa-6 pb-4 rounded-md cursor-pointer mb-4  bg-light' + note.color\"\n      v-for=\"note in filteredNotes\"\n      :key=\"note.id\"\n      @click=\"store.SelectNote(note.id)\"\n      v-if=\"filteredNotes.length > 0\"\n    >\n      <h6 :class=\"'text-h6 text-truncate text-' + note.color\">{{ note.title }}</h6>\n      <div class=\"d-flex mt-3 align-center\">\n        <small class=\"text-subtitle-2 opacity-25\">{{\n          new Date(note.datef).toLocaleDateString()\n        }}</small>\n        <v-btn icon variant=\"text\" class=\"ml-auto\" size=\"x-small\" @click=\"store.deleteNote(note.id)\"\n          ><v-tooltip activator=\"parent\" location=\"top\">Delete Note</v-tooltip><TrashIcon size=\"18\"\n        /></v-btn>\n      </div>\n    </v-sheet>\n    <v-sheet v-if=\"filteredNotes.length === 0\"\n      ><v-alert\n        type=\"error\"\n        title=\"Opps\"\n        text=\"The Notes you are looking for is not found\"\n      ></v-alert\n    ></v-sheet>\n  </div>\n</template>\n<style lang=\"scss\">\n.note-sheet {\n  transition: 0.1s ease-in;\n  &:hover {\n    transform: scale(1.02);\n  }\n}\n</style>\n","<script setup lang=\"ts\">\nimport { ref, onMounted, computed } from 'vue';\nimport { useNoteStore } from '@/stores/apps/notes';\nimport { colorVariation } from '@/_mockApis/apps/notes/index';\nimport { uniqueId } from 'lodash';\n\n// common components\nconst dialog = ref(false);\nconst title = ref('');\nconst color = ref('primary');\nconst store = useNoteStore();\n\nonMounted(() => {\n  store.fetchNotes();\n});\n\nconst getNote = computed(() => {\n  return store.notes;\n});\n\nfunction colorset(btcolor: any) {\n  return (color.value = btcolor);\n}\nconst getId = getNote.value.length;\nfunction addNote() {\n  return (\n    getNote.value.push({\n      id: getId + 1,\n      title: title.value,\n      color: color.value,\n      datef: new Date(),\n    }),\n    (dialog.value = false),\n    (title.value = '')\n  );\n}\n</script>\n\n<template>\n  <!-- ---------------------------------------------------- -->\n  <!-- Table Basic -->\n  <!-- ---------------------------------------------------- -->\n\n  <v-sheet>\n    <v-btn color=\"primary\" @click=\"dialog = true\" rounded=\"pill\">Add Notes</v-btn>\n\n    <v-dialog v-model=\"dialog\" max-width=\"500\">\n      <v-card>\n        <v-card-text>\n          <h4 class=\"text-h6 mb-4\">Add Notes</h4>\n          <v-textarea outlined name=\"Note\" v-model=\"title\"></v-textarea>\n          <h4 class=\"text-h6 mt-4 mb-4\">Select Notes Color</h4>\n          <div class=\"d-flex gap-3 align-center\">\n            <v-btn\n              icon\n              v-for=\"btcolor in colorVariation\"\n              :key=\"btcolor.id\"\n              size=\"x-small\"\n              :color=\"btcolor.color\"\n              @click=\"colorset(btcolor.color)\"\n            >\n              <CheckIcon width=\"16\" v-if=\"color === btcolor.color\" />\n            </v-btn>\n          </div>\n\n          <div class=\"pt-6 pb-3 d-flex gap-2\">\n            <v-btn color=\"primary\" @click=\"addNote\" rounded=\"pill\">Save</v-btn>\n            <v-btn color=\"error\" @click=\"dialog = false\" rounded=\"pill\">Close Dialog</v-btn>\n          </div>\n        </v-card-text>\n      </v-card>\n    </v-dialog>\n  </v-sheet>\n</template>\n","<script setup lang=\"ts\">\nimport { ref, onMounted, computed } from 'vue';\nimport { useNoteStore } from '@/stores/apps/notes';\nimport { CheckIcon, Menu2Icon } from 'vue-tabler-icons';\nimport AddNote from './AddNote.vue';\nimport { colorVariation } from '@/_mockApis/apps/notes/index';\n\nconst store = useNoteStore();\n\nonMounted(() => {\n  store.fetchNotes();\n});\n\nconst getNote = computed(() => {\n  return store.notes[store.notesContent - 1];\n});\n// theme breadcrumb\n</script>\n\n<template>\n  <!-- ---------------------------------------------------- -->\n  <!-- Table Basic -->\n  <!-- ---------------------------------------------------- -->\n\n  <v-sheet>\n    <v-sheet class=\"py-3 pl-6 pr-4 d-flex align-center\">\n      <h4 class=\"text-h6 font-weight-semibold\">Edit Notes</h4>\n      <div class=\"ml-auto\"><AddNote /></div>\n    </v-sheet>\n    <v-divider></v-divider>\n    <v-sheet v-if=\"getNote\">\n      <v-sheet class=\"pa-6\">\n        <h4 class=\"text-h6 mb-4\">Change Title</h4>\n        <v-textarea outlined name=\"Note\" v-model=\"getNote.title\"></v-textarea>\n\n        <h4 class=\"text-h6 mt-4 mb-4\">Change Notes Color</h4>\n        <div class=\"d-flex gap-3 align-center\">\n          <v-btn\n            icon\n            v-for=\"btcolor in colorVariation\"\n            :key=\"btcolor.id\"\n            size=\"x-small\"\n            :color=\"btcolor.color\"\n            @click=\"store.updateNote(getNote.id, btcolor.color)\"\n          >\n            <CheckIcon width=\"16\" v-if=\"getNote.color === btcolor.color\" />\n          </v-btn>\n        </div>\n      </v-sheet>\n    </v-sheet>\n    <v-sheet v-else class=\"pa-6\">\n      <v-alert type=\"error\" title=\"Opps\" text=\"No Note selected Please select note\"></v-alert\n    ></v-sheet>\n  </v-sheet>\n</template>\n"],"names":["axios","index"],"mappings":"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"}
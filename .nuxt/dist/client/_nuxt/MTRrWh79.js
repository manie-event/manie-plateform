import{x as c,z as a}from"./BR_J5eSC.js";const v=c({id:"invoices",state:()=>({invoice:[],invoiceContent:1,invoiceSearch:""}),getters:{grandTotal:()=>e=>{const i=(e.orders??[]).reduce((r,n)=>r+(n.unitPrice??0)*(n.units??0),0),o=i*.1;return i+o}},actions:{async fetchinvoice(){try{const e=await a.get("/api/data/invoices/invoiceData");this.invoice=e.data}catch(e){console.error(e),alert("Failed to fetch invoices")}},async addInvoice(e){try{const i=await a.post("/api/data/invoices/invoiceData",e);return this.invoice.push(i.data),i.data}catch(i){console.error("Error adding invoice:",i)}},async updateInvoice(e){try{const i=await a.put(`/api/data/invoices/invoiceData/${e.id}`,e);console.log("Response from update:",i);const t=this.invoice.findIndex(o=>o.id===e.id);return t!==-1&&(this.invoice[t]=i.data),i.data}catch(i){console.error("Error updating invoice:",i)}},deleteinvoice(e){this.invoice=this.invoice.filter(i=>i.id!==e)}}});export{v as u};

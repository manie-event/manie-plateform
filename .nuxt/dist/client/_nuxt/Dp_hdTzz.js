import{g as m,u as p,z as n,aq as h}from"./BR_J5eSC.js";import{u}from"./CjJ6mZRf.js";const c={"email already exists":"L'adresse e-mail est déjà utilisée.","The password field format is invalid":"Le format du champ mot de passe est invalide.","The confirmPassword field and password field must be the same":"Le champ de confirmation du mot de passe et le champ mot de passe doivent être identiques.","The username field must be defined":"Le champ nom d’utilisateur doit être défini.","The email field must be defined":"Le champ d'adresse e-mail doit être défini.","The password field must be defined":"Le champ mot de passe doit être défini.","The email field must be a valid email address":"Le champ d'adresse e-mail doit être une adresse e-mail valide.","User not found or invalid":"Utilisateur non trouvé ou invalide.","The email has already been taken":"L'adresse e-mail a déjà été prise."},o=m([]),f=a=>{if("errors"in a&&Array.isArray(a.errors))a.errors.forEach(t=>{const i={id:Date.now()+Math.random(),...t,message:c[t.message]||t.message};o.value.push(i),setTimeout(()=>{o.value=o.value.filter(d=>d.id!==i.id)},5e3)});else if("message"in a){const t={id:Date.now()+Math.random(),message:c[a.message]||a.message};o.value=[t],setTimeout(()=>{o.value=[]},5e3)}else console.warn("Format d'erreur non supporté:",a)},g=()=>({errorMessageArray:o,addError:f}),E=()=>{const a=h(),t=p(),{addError:i}=g();return{sendRegister:async s=>{try{const{data:e}=await n.post(`${a.public.apiUrl}/auth/register`,s);return e}catch(e){i(e)}},sendLogin:async s=>{var e;try{const{data:r}=await n.post(`${a.public.apiUrl}/auth/login`,s);if((e=r==null?void 0:r.token)!=null&&e.token){const l=u("token",{maxAge:2592e3,path:"/",sameSite:"strict",secure:!0});return l.value=r.token,r}}catch(r){i(r)}},sendLogout:async()=>{try{const s=u("token"),{data:e}=await n.post(`${a.public.apiUrl}/auth/logout`,null,{headers:{Authorization:`Bearer  ${s}`,"Content-Type":"application/json"}});e&&await t.push("/")}catch(s){i(s)}},checkEmail:async s=>{try{const{data:e}=await n.get(`${a.public.apiUrl}/auth/verify-email/${s}`);if(e)return e}catch(e){i(e)}}}};export{g as a,E as u};

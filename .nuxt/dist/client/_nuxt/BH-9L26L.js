import{h as u,s as w,k as g,a as n,u as h}from"./BOgXYFlq.js";import{u as m}from"./CrszIaGj.js";const C=r=>({id:r.id,uuid:r.uuid,sector:r.sector,category:r.category,value:r.value,isSelected:!1}),A=()=>{const r=h(),{setProfessionalServices:c,setKeywords:d}=u(),{professionnalServices:p,keywords:v}=w(u()),a=g(!1),i=m("token"),f=async o=>{try{a.value=!0;const{data:e}=await n.get(`${r.public.apiUrl}/sector`,{headers:{Authorization:`Bearer ${i.value}`,"Content-Type":"application/json"}});if(e){const s=e.data.filter(t=>t.name.toLowerCase()===o.toLowerCase());return await Promise.all([y(s[0].uuid),l(s[0].name)]),a.value=!1,{services:p.value,keywords:v.value}}}catch{throw new Error("No data received from API")}},y=async o=>{try{const{data:e}=await n.get(`${r.public.apiUrl}/service`,{params:{q:o,limit:100},headers:{Authorization:`Bearer ${i.value}`,"Content-Type":"application/json"}});if(e){const s=e.data.filter(t=>t.sectorUuid.toLowerCase()===o.toLowerCase());console.log(s,"data serviceFiltered"),c(s)}}catch{console.error("No data received from API")}},l=async o=>{console.log(o,"query"),a.value=!0;try{const{data:e}=await n.get(`${r.public.apiUrl}/keyword`,{params:{q:o,limit:1e3},headers:{Authorization:`Bearer ${i.value}`,"Content-Type":"application/json"}}),s=e.data.filter(t=>t.sector.toLowerCase()==o.toLowerCase()).slice(0,100).map(t=>C(t));d(s),a.value=!1}catch(e){console.error("Error fetching keywords:",e)}};return{loading:a,getKeywords:l,getSectors:f,sendProfessionalServices:async o=>{try{const e=await n.post(`${r.public.apiUrl}/professional-service/create`,o,{headers:{Authorization:`Bearer ${i.value}`,"Content-Type":"application/json"}});e.data&&c(e.data)}catch(e){console.error("Error sending professional services:",e)}}}};export{A as u};

import{b8 as S,b9 as E,ba as T,b0 as k,bb as B,bc as C,k as u,z as v,j as $,h as R,s as z,bd as g,b2 as d,u as U}from"./C7zyImg8.js";import{u as j}from"./Bbe0W9pt.js";function I(s){var r;const e=s||E();return((r=e==null?void 0:e.ssrContext)==null?void 0:r.head)||(e==null?void 0:e.runWithContext(()=>{if(T())return k(B)}))}function H(s,e={}){const r=I(e.nuxt);if(r)return S(s,{head:r,...e})}const P=9,_=C("cartStore",()=>{const s=u(0),e=u(0),r=u([]),l=v(()=>9*e.value),f=v(()=>e.value);return{cartQuantity:e,addresses:r,getCart:f,userTokenBalance:s,getTotalPrice:l,setBillingInfo:a=>{r.value.push(a)},initializeTokenBalance:a=>{s.value=Number(a)||0}}}),N=()=>{const s=j("token");$();const e=U(),r=R(),{professionalUser:l}=z(r),f=_(),{initializeTokenBalance:m}=f,c=u(!1),a=u(null),w=async o=>{var i,p;const t=l.value;if(!(t!=null&&t.uuid))throw new Error("Profil professionnel non trouvé");try{const{data:n}=await d.post(`${e.public.apiUrl}/payments/token/${t.uuid}`,{quantity:o,professional_uuid:t.uuid},{headers:{Authorization:`Bearer ${s.value}`,"Content-Type":"application/json"}});if(n!=null&&n.url)return window.location.href=n.url,n;throw new Error("URL de paiement non reçue")}catch(n){throw console.error("Erreur création session Stripe:",n),new Error(((p=(i=n.response)==null?void 0:i.data)==null?void 0:p.message)||"Erreur lors de la création du paiement")}},h=async()=>{const o=l.value;try{const{data:t}=await d.get(`${e.public.apiUrl}/credit/${o==null?void 0:o.uuid}`,{headers:{Authorization:`Bearer ${s.value}`,"Content-Type":"application/json"}});return t.quantity}catch(t){console.log(t)}},y=async o=>{try{const{data:t}=await d.get(`${e.public.apiUrl}/payments/session-status/${o}`,{headers:{Authorization:`Bearer ${s.value}`}});return console.log(t,"verifyStripeSession"),t}catch(t){throw console.error("Erreur vérification session:",t),new Error("Impossible de vérifier le paiement")}};return{createTokenSession:w,processStripeReturn:async o=>{if(c.value)return{success:!1,message:"Traitement en cours"};c.value=!0;try{const i=(await y(o)).session;if(i.payment_status!=="paid")throw new Error("Le paiement n'a pas été complété");const p=i.amount_total/100,n=Math.floor(p/P),b=await h();return m(b),{success:!0,quantity:n,sessionData:i}}catch(t){return a.value=t.message,{success:!1,message:a.value}}finally{c.value=!1}},verifyStripeSession:y,getJetonQuantity:h,isProcessing:g(c),error:g(a)}};export{H as a,_ as b,N as u};
